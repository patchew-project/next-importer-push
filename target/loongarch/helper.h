/*
 * QEMU LoongArch CPU
 *
 * Copyright (c) 2021 Loongson Technology Corporation Limited
 *
 * SPDX-License-Identifier: LGPL-2.1+
 */

DEF_HELPER_3(raise_exception_err, noreturn, env, i32, int)
DEF_HELPER_2(raise_exception, noreturn, env, i32)

DEF_HELPER_2(cto_w, tl, env, tl)
DEF_HELPER_2(ctz_w, tl, env, tl)
DEF_HELPER_2(cto_d, tl, env, tl)
DEF_HELPER_2(ctz_d, tl, env, tl)
DEF_HELPER_2(bitrev_w, tl, env, tl)
DEF_HELPER_2(bitrev_d, tl, env, tl)

DEF_HELPER_FLAGS_1(loongarch_bitswap, TCG_CALL_NO_RWG_SE, tl, tl)
DEF_HELPER_FLAGS_1(loongarch_dbitswap, TCG_CALL_NO_RWG_SE, tl, tl)

DEF_HELPER_3(asrtle_d, void, env, tl, tl)
DEF_HELPER_3(asrtgt_d, void, env, tl, tl)

DEF_HELPER_3(crc32, tl, tl, tl, i32)
DEF_HELPER_3(crc32c, tl, tl, tl, i32)
DEF_HELPER_2(cpucfg, tl, env, tl)

/* Floating-point helper */
DEF_HELPER_3(fp_add_s, i32, env, i32, i32)
DEF_HELPER_3(fp_add_d, i64, env, i64, i64)
DEF_HELPER_3(fp_sub_s, i32, env, i32, i32)
DEF_HELPER_3(fp_sub_d, i64, env, i64, i64)
DEF_HELPER_3(fp_mul_s, i32, env, i32, i32)
DEF_HELPER_3(fp_mul_d, i64, env, i64, i64)
DEF_HELPER_3(fp_div_s, i32, env, i32, i32)
DEF_HELPER_3(fp_div_d, i64, env, i64, i64)
DEF_HELPER_3(fp_max_s, i32, env, i32, i32)
DEF_HELPER_3(fp_max_d, i64, env, i64, i64)
DEF_HELPER_3(fp_maxa_s, i32, env, i32, i32)
DEF_HELPER_3(fp_maxa_d, i64, env, i64, i64)
DEF_HELPER_3(fp_min_s, i32, env, i32, i32)
DEF_HELPER_3(fp_min_d, i64, env, i64, i64)
DEF_HELPER_3(fp_mina_s, i32, env, i32, i32)
DEF_HELPER_3(fp_mina_d, i64, env, i64, i64)

DEF_HELPER_4(fp_madd_s, i32, env, i32, i32, i32)
DEF_HELPER_4(fp_madd_d, i64, env, i64, i64, i64)
DEF_HELPER_4(fp_msub_s, i32, env, i32, i32, i32)
DEF_HELPER_4(fp_msub_d, i64, env, i64, i64, i64)
DEF_HELPER_4(fp_nmadd_s, i32, env, i32, i32, i32)
DEF_HELPER_4(fp_nmadd_d, i64, env, i64, i64, i64)
DEF_HELPER_4(fp_nmsub_s, i32, env, i32, i32, i32)
DEF_HELPER_4(fp_nmsub_d, i64, env, i64, i64, i64)

DEF_HELPER_3(fp_exp2_s, i32, env, i32, i32)
DEF_HELPER_3(fp_exp2_d, i64, env, i64, i64)
DEF_HELPER_2(fp_logb_s, i32, env, i32)
DEF_HELPER_2(fp_logb_d, i64, env, i64)

DEF_HELPER_1(fp_abs_s, i32, i32)
DEF_HELPER_1(fp_abs_d, i64, i64)
DEF_HELPER_1(fp_neg_s, i32, i32)
DEF_HELPER_1(fp_neg_d, i64, i64)

DEF_HELPER_2(fp_sqrt_s, i32, env, i32)
DEF_HELPER_2(fp_sqrt_d, i64, env, i64)
DEF_HELPER_2(fp_rsqrt_s, i32, env, i32)
DEF_HELPER_2(fp_rsqrt_d, i64, env, i64)
DEF_HELPER_2(fp_recip_s, i32, env, i32)
DEF_HELPER_2(fp_recip_d, i64, env, i64)
DEF_HELPER_2(fp_rint_s, i32, env, i32)
DEF_HELPER_2(fp_rint_d, i64, env, i64)

DEF_HELPER_FLAGS_2(fp_class_s, TCG_CALL_NO_RWG_SE, i32, env, i32)
DEF_HELPER_FLAGS_2(fp_class_d, TCG_CALL_NO_RWG_SE, i64, env, i64)

/* fcmp.cond.s/d */
DEF_HELPER_3(fp_cmp_caf_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_caf_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cun_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cun_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_ceq_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_ceq_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cueq_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cueq_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_clt_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_clt_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cult_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cult_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cle_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cle_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cule_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cule_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cne_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cne_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cor_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cor_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_cune_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_cune_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_saf_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_saf_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sun_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sun_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_seq_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_seq_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sueq_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sueq_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_slt_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_slt_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sult_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sult_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sle_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sle_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sule_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sule_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sne_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sne_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sor_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sor_s, i32, env, i32, i32)
DEF_HELPER_3(fp_cmp_sune_d, i64, env, i64, i64)
DEF_HELPER_3(fp_cmp_sune_s, i32, env, i32, i32)

DEF_HELPER_3(movreg2cf_i32, void, env, i32, i32)
DEF_HELPER_3(movreg2cf_i64, void, env, i32, i64)

DEF_HELPER_2(fp_cvt_d_s, i64, env, i32)
DEF_HELPER_2(fp_cvt_s_d, i32, env, i64)
DEF_HELPER_2(fp_fint_d_w, i64, env, i32)
DEF_HELPER_2(fp_fint_d_l, i64, env, i64)
DEF_HELPER_2(fp_fint_s_w, i32, env, i32)
DEF_HELPER_2(fp_fint_s_l, i32, env, i64)
DEF_HELPER_2(fp_tintrm_l_s, i64, env, i32)
DEF_HELPER_2(fp_tintrm_l_d, i64, env, i64)
DEF_HELPER_2(fp_tintrm_w_s, i32, env, i32)
DEF_HELPER_2(fp_tintrm_w_d, i32, env, i64)
DEF_HELPER_2(fp_tintrp_l_s, i64, env, i32)
DEF_HELPER_2(fp_tintrp_l_d, i64, env, i64)
DEF_HELPER_2(fp_tintrp_w_s, i32, env, i32)
DEF_HELPER_2(fp_tintrp_w_d, i32, env, i64)
DEF_HELPER_2(fp_tintrz_l_s, i64, env, i32)
DEF_HELPER_2(fp_tintrz_l_d, i64, env, i64)
DEF_HELPER_2(fp_tintrz_w_s, i32, env, i32)
DEF_HELPER_2(fp_tintrz_w_d, i32, env, i64)
DEF_HELPER_2(fp_tintrne_l_s, i64, env, i32)
DEF_HELPER_2(fp_tintrne_l_d, i64, env, i64)
DEF_HELPER_2(fp_tintrne_w_s, i32, env, i32)
DEF_HELPER_2(fp_tintrne_w_d, i32, env, i64)
DEF_HELPER_2(fp_tint_l_s, i64, env, i32)
DEF_HELPER_2(fp_tint_l_d, i64, env, i64)
DEF_HELPER_2(fp_tint_w_s, i32, env, i32)
DEF_HELPER_2(fp_tint_w_d, i32, env, i64)

DEF_HELPER_4(fsel, i64, env, i64, i64, i32)
DEF_HELPER_3(movreg2cf, void, env, i32, tl)
DEF_HELPER_2(movcf2reg, tl, env, i32)
DEF_HELPER_2(movfcsr2gr, tl, env, i32)
DEF_HELPER_3(movgr2fcsr, void, env, tl, i32)
